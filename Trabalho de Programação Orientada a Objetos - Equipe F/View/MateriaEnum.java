package View;

public enum MateriaEnum {
    MATEMATICA_BASICA(8, "RUS0004", "MATEMÁTICA BÁSICA", 64),
    ARQUITETURA_DE_COMPUTADORES(9, "RUS0005", "ARQUITETURA DE COMPUTADORES", 64),
    PROGRAMACAO_ORIENTADA_A_OBJETOS(10, "RUS0006", "PROGRAMAÇÃO ORIENTADA A OBJETOS", 64),
    MATEMATICA_DISCRETA(11, "RUS0007", "MATEMÁTICA DISCRETA", 64),
    PROBABILIDADE_E_ESTATISTICA(12, "RUS0008", "PROBABILIDADE E ESTATÍSTICA", 64),
    INTRODUCAO_A_PROCESSOS_E_REQUISITOS_DE_SOFTWARE(13, "RUS0009", "INTRODUÇÃO A PROCESSOS E REQUISITOS DE SOFTWARE", 64),
    PRECALCULO(14, "RUS0012", "PRÉ-CÁLCULO", 64),
    SISTEMAS_OPERACIONAIS(15, "RUS0013", "SISTEMAS OPERACIONAIS", 64),
    ESTRUTURAS_DE_DADOS(16, "RUS0014", "ESTRUTURAS DE DADOS", 64),
    CALCULO_DIFERENCIAL_E_INTEGRAL_I(17, "RUS0015", "CÁLCULO DIFERENCIAL E INTEGRAL I", 64),
    EMPREENDEDORISMO(18, "RUS0060", "EMPREENDEDORISMO", 64),
    FUNDAMENTOS_DE_BANCO_DE_DADOS(19, "RUS0061", "FUNDAMENTOS DE BANCO DE DADOS", 64),
    LOGICA_PARA_COMPUTACAO(20, "RUS0062", "LÓGICA PARA COMPUTAÇÃO", 64),
    PROJETO_DETALHADO_DE_SOFTWARE(21, "RUS0064", "PROJETO DETALHADO DE SOFTWARE", 64),
    GERENCIA_DE_PROJETOS_DE_SOFTWARE(22, "RUS0066", "GERÊNCIA DE PROJETOS DE SOFTWARE", 64),
    PROJETO_E_ANALISE_DE_ALGORITMOS(23, "RUS0067", "PROJETO E ANÁLISE DE ALGORITMOS", 64),
    PROCESSOS_DE_SOFTWARE(24, "RUS0068", "PROCESSOS DE SOFTWARE", 64),
    REQUISITOS_DE_SOFTWARE(25, "RUS0069", "REQUISITOS DE SOFTWARE", 64),
    ESTRUTURAS_DE_DADOS_AVANCADAS(26, "RUS0071", "ESTRUTURAS DE DADOS AVANÇADAS", 64),
    LINGUAGENS_FORMAIS_E_AUTOMATOS(27, "RUS0072", "LINGUAGENS FORMAIS E AUTÔMATOS", 64),
    ALGEBRA_LINEAR(28, "RUS0077", "ÁLGEBRA LINEAR", 64),
    COMPILADORES(29, "RUS0079", "COMPILADORES", 64),
    COMPUTACAO_GRAFICA(30, "RUS0080", "COMPUTAÇÃO GRÁFICA", 64),
    MATEMATICA_COMPUTACIONAL(31, "RUS0081", "MATEMÁTICA COMPUTACIONAL", 64),
    REDES_DE_COMPUTADORES(32, "RUS0082", "REDES DE COMPUTADORES", 64),
    DESENVOLVIMENTO_DE_SOFTWARE_PARA_WEB(33, "RUS0083", "DESENVOLVIMENTO DE SOFTWARE PARA WEB", 64),
    ENGENHARIA_DE_SOFTWARE(34, "RUS0084", "ENGENHARIA DE SOFTWARE", 64),
    SISTEMAS_DISTRIBUIDOS(35, "RUS0085", "SISTEMAS DISTRIBUÍDOS", 64),
    INTELIGENCIA_ARTIFICIAL(36, "RUS0086", "INTELIGÊNCIA ARTIFICIAL", 64),
    TEORIA_DA_COMPUTACAO(37, "RUS0087", "TEORIA DA COMPUTAÇÃO", 64),
    PROJETO_DE_PESQUISA_CIENTIFICA_E_TECNOLOGICA(38, "RUS0088", "PROJETO DE PESQUISA CIENTÍFICA E TECNOLÓGICA", 64),
    VERIFICACAO_E_VALIDACAO(39, "RUS0098", "VERIFICAÇÃO E VALIDAÇÃO", 64),
    MANUTENCAO_DE_SOFTWARE(40, "RUS0099", "MANUTENÇÃO DE SOFTWARE", 64),
    SEGURANCA(41, "RUS0100", "SEGURANÇA", 64),
    EXPERIMENTACAO_EM_ENGENHARIA_DE_SOFTWARE(42, "RUS0101", "EXPERIMENTAÇÃO EM ENGENHARIA DE SOFTWARE", 64),
    ARQUITETURA_DE_SOFTWARE(43, "RUS0242", "ARQUITETURA DE SOFTWARE", 64),
    INTERACAO_HUMANOCOMPUTADOR(44, "RUS0256", "INTERAÇÃO HUMANO-COMPUTADOR", 64),
    ETICA_PROFISSIONAL(45, "RUS0296", "ÉTICA PROFISSIONAL", 64),
    FUNDAMENTOS_DE_PROGRAMACAO(46, "RUS0297", "FUNDAMENTOS DE PROGRAMAÇÃO", 64),
    INTRODUCAO_A_ENGENHARIA_DE_SOFTWARE(47, "RUS0298", "INTRODUÇÃO À ENGENHARIA DE SOFTWARE", 64),
    LABORATORIO_DE_PROGRAMACAO(48, "RUS0299", "LABORATÓRIO DE PROGRAMAÇÃO", 64),
    ALGORITMOS_EM_GRAFOS(49, "RUS0300", "ALGORITMOS EM GRAFOS", 64),
    APRENDIZADO_DE_MAQUINA(50, "RUS0310", "APRENDIZADO DE MÁQUINA", 64);

    private int idMateria;
    private String codigoMateria;
    private String nomeMateria;
    private int cargaHoraria;


    MateriaEnum(int idMateria, String codigoMateria, String nomeMateria, int cargaHoraria){
        this.idMateria = idMateria;
        this.codigoMateria = codigoMateria;
        this.nomeMateria = nomeMateria;
        this.cargaHoraria = cargaHoraria;
    }

    public int getIdMateria(){
        return this.idMateria;
    }

    public String getCodigo(){
        return this.codigoMateria;
    }

    public String getNome(){
        return this.nomeMateria;
    }

    public String getNomeMateria(){
        return this.nomeMateria;
    }

    public int getCargahoraria(){
        return this.cargaHoraria;
    }
    
    public static MateriaEnum buscarMateria(int idMateria){
        for(MateriaEnum idEMateriaEnum: MateriaEnum.values()){
            if(idEMateriaEnum.getIdMateria() == idMateria){
                return idEMateriaEnum;
            }       
        }
        return null;
    }
}
